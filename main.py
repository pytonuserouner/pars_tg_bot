import telebot as telebot
import time
from loguru import logger
from telebot import types
from telebot.types import Message, BotCommand

from my_emojize import *
from select_kvest import show_kvest_info
from sqlquery import read_data_age, read_data_members, read_data_scary, read_data_rating, read_data_type, get_url_query
from states import UserInputState

BOT_TOKEN = '6086834720:AAF-xptg9XdY-gjzWVBOpcux89MWpIbnnyQ'
bot = telebot.TeleBot(token=BOT_TOKEN)


DEFAULT_COMMANDS = (
    ('start', "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    ('help', "–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞")
)

def set_default_commands(bot):
    bot.set_my_commands(
        [BotCommand(*i) for i in DEFAULT_COMMANDS])


@bot.message_handler(commands=['help'])
def bot_help(message: Message):
    text = [f'/{command} - {desk}' for command, desk in DEFAULT_COMMANDS]
    bot.reply_to(message, '\n'.join(text))


@bot.message_handler(commands=['start'])
@logger.catch
def bot_start(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, —Ä–µ–∞–≥–∏—Ä—É—é—â–∞—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É 'start'. –í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ Telegram
    """
    logger.info('–ù–∞—á–Ω–µ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item1 = types.KeyboardButton('–î–∞')
    item2 = types.KeyboardButton('–ù–µ—Ç')
    markup.row(item1, item2)
    bot.delete_state(message.from_user.id, message.chat.id)
    bot.send_message(message.chat.id, f'üëã –ü—Ä–∏–≤–µ—Ç!\n'
                                      f'–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ —ç—Ç–æ–º —á–∞—Ç –±–æ—Ç–µ\n'
                                      f'–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π –∫–≤–µ—Å—Ç –ø–æ –≤–∫—É—Å—É\n'
                                      f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ\n'
                                      f'https://mir-kvestov.ru')
    bot.send_message(message.chat.id, "–ù–∞—á–Ω–µ–º?", reply_markup=markup)


@bot.message_handler(func=lambda m: m.text == '–ù–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ' or m.text == '–î–∞' and m.content_type == 'text')
@logger.catch
def start_yes(m: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É.
    –í—ã–≤–æ–¥–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    :param m: —Å–æ–æ–±—â–µ–Ω–∏–µ Telegram
    :return: None
    """
    logger.info('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É')
    markup_age = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item11 = types.KeyboardButton(f"{age_emoji[0]} 6+")
    item21 = types.KeyboardButton(f"{age_emoji[1]} 7+")
    item31 = types.KeyboardButton(f"{age_emoji[2]} 8+")
    item41 = types.KeyboardButton(f"{age_emoji[3]} 10+")
    item51 = types.KeyboardButton(f"{age_emoji[4]} 12+")
    item61 = types.KeyboardButton(f"{age_emoji[5]} 14+")
    item71 = types.KeyboardButton(f"{age_emoji[6]} 16+")
    item81 = types.KeyboardButton(f"{age_emoji[7]} 18+")
    markup_age.row(item11, item21, item31)
    markup_age.row(item41, item51, item61)
    markup_age.row(item71, item81)
    bot.send_message(m.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", reply_markup=markup_age)


@bot.message_handler(func=lambda m: m.text == '–ù–µ—Ç' and m.content_type == 'text')
@logger.catch
def start_no(m: Message) -> None:
    bot.send_message(m.chat.id, "–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π –∫–≤–µ—Å—Ç\n"
                                "https://mir-kvestov.ru")


@bot.message_handler(func=lambda m: m.text[:1] in age_emoji)
@logger.catch
def choice_age(m: Message):
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É {m.text[1:]}')
    bot.set_state(m.chat.id, UserInputState.age_filter)
    with bot.retrieve_data(m.chat.id) as data:
        data.clear()
        data['age_filter'] = int(m.text[2:-1])
        data['middle_rez_1'] = read_data_age(int(m.text[2:-1]))
        logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ {data['middle_rez_1']} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
    logger.info('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
    markup_num = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    num1 = types.KeyboardButton(f"{num_emoji[0]} –æ—Ç 1 –¥–æ 10")
    num2 = types.KeyboardButton(f"{num_emoji[1]} –æ—Ç 2 –¥–æ 10")
    num3 = types.KeyboardButton(f"{num_emoji[2]} –æ—Ç 10 –¥–æ 20")
    num4 = types.KeyboardButton(f"{num_emoji[3]} –æ—Ç 20 –¥–æ 100")
    markup_num.row(num1, num2)
    markup_num.row(num3, num4)
    bot.send_message(m.chat.id, '–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', reply_markup=markup_num)


@bot.message_handler(func=lambda m: m.text[:1] in num_emoji)
@logger.catch
def choice_members(m):
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ {m.text}')
    with bot.retrieve_data(m.chat.id) as data:
        if len(m.text[5:]) == 7:
            data['min_members_filter'] = int(m.text[5:6])
            data['max_members_filter'] = int(m.text[10:])
        else:
            data['min_members_filter'] = int(m.text[5:8])
            data['max_members_filter'] = int(m.text[11:])
        data['middle_rez_2'] = read_data_members(data['middle_rez_1'], data['min_members_filter'], data['max_members_filter'])
        if len(data['middle_rez_2']) == 0:
            bot.send_message(m.chat.id, "–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            bot.send_message(m.chat.id, '/start')
        logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ {data['middle_rez_2']}")
    logger.info('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—é scary')
    markup_scary = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item12 = types.KeyboardButton(f"{scary_emoji[0]} 0+")
    item22 = types.KeyboardButton(f"{scary_emoji[1]} 1+")
    item33 = types.KeyboardButton(f"{scary_emoji[2]} 3+")
    markup_scary.row(item12, item22, item33)
    bot.send_message(m.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏", reply_markup=markup_scary)


@bot.message_handler(func=lambda m: m.text[:1] in scary_emoji)
@logger.catch
def choice_scary(m):
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —É—Ä–æ–≤–µ–Ω—å scary {m.text}')
    with bot.retrieve_data(m.chat.id) as data:
        data['scary_filter'] = int(m.text[2:3])
        data['middle_rez_3'] = read_data_scary(data['middle_rez_2'], data['scary_filter'])
        if len(data['middle_rez_3']) == 0:
            bot.send_message(m.chat.id, "–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            bot.send_message(m.chat.id, '/start')
        logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ {data['middle_rez_3']}")
    markup_rating = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item40 = types.KeyboardButton(f"{rate_emoji[0]} –±–µ–∑ —Ä–µ–π—Ç–∏–Ω–≥–∞")
    item41 = types.KeyboardButton(f"{rate_emoji[1]} 7")
    item42 = types.KeyboardButton(f"{rate_emoji[2]} 8")
    item43 = types.KeyboardButton(f"{rate_emoji[3]} 9")
    item44 = types.KeyboardButton(f"{rate_emoji[4]} 10")
    markup_rating.row(item41, item42)
    markup_rating.row(item43, item44)
    markup_rating.row(item40)
    logger.info('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É')
    bot.send_message(m.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=markup_rating)


@bot.message_handler(func=lambda m: m.text[:1] in rate_emoji)
@logger.catch
def rating(m):
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ä–µ–π—Ç–∏–Ω–≥ {m.text}')
    with bot.retrieve_data(m.chat.id) as data:
        if m.text[1:].isdigit():
            data['rating_filter'] = m.text[1:]
        else:
            data['rating_filter'] = 0
        data['middle_rez_4'] = read_data_rating(data['middle_rez_3'], data['rating_filter'])
        if len(data['middle_rez_4']) == 0:
            bot.send_message(m.chat.id, "–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            bot.send_message(m.chat.id, '/start')
        logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ {data['middle_rez_4']}")
    logger.info('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    markup_type = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item51 = types.KeyboardButton(f"{type_emoji[0]} –ü–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å")
    item52 = types.KeyboardButton(f"{type_emoji[1]} –ö–≤–µ—Å—Ç")
    item53 = types.KeyboardButton(f"{type_emoji[2]} –†–æ–ª–µ–≤–æ–π –∫–≤–µ—Å—Ç")
    item54 = types.KeyboardButton(f"{type_emoji[3]} VR-–∫–≤–µ—Å—Ç")
    item55 = types.KeyboardButton(f"{type_emoji[4]} –ö–≤–µ—Å—Ç-–∞–Ω–∏–º–∞—Ü–∏—è")
    item56 = types.KeyboardButton(f"{type_emoji[5]} –û–Ω–ª–∞–π–Ω-–∫–≤–µ—Å—Ç")
    item57 = types.KeyboardButton(f"{type_emoji[6]} –ì–æ—Ä–æ–¥—Å–∫–æ–π –∫–≤–µ—Å—Ç")
    item58 = types.KeyboardButton(f"{type_emoji[7]} –≠–∫—à–Ω-–∏–≥—Ä–∞")
    item59 = types.KeyboardButton(f"{type_emoji[8]} –ö–≤–∏–∑")
    markup_type.row(item51, item52)
    markup_type.row(item53, item54)
    markup_type.row(item55, item56)
    markup_type.row(item57, item58, item59)
    bot.send_message(m.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=markup_type)


@bot.message_handler(func=lambda m: m.text[:1] in type_emoji)
@logger.catch
def typies(m) -> None:
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è {m.text}')
    with bot.retrieve_data(m.chat.id) as data:
        data['types_filter'] = m.text[2:]
        data['middle_rez_5'] = read_data_type(data['middle_rez_4'], data['types_filter'])
        if len(data['middle_rez_5']) == 0:
            bot.send_message(m.chat.id, "–ü–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            bot.send_message(m.chat.id, '/start')
        logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ {data['middle_rez_5']}")
    bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞")
    del_keyboard = types.ReplyKeyboardRemove()
    bot.send_message(m.chat.id, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –í–∞—à –∑–∞–ø—Ä–æ—Å:\n"
                                f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {data['age_filter']}\n"
                                f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {data['max_members_filter']}\n"
                                f"–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: {data['scary_filter']}\n"
                                f"–†–µ–π—Ç–∏–Ω–≥: {data['rating_filter']}\n"
                                f"–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {data['types_filter']}", reply_markup=del_keyboard)
    markup_rezult = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    item61 = types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
    item62 = types.KeyboardButton('–ù–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ')
    markup_rezult.row(item61, item62)
    bot.send_message(m.chat.id, "–ï—Å–ª–∏ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'."
                                "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ '–ù–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ'", reply_markup=markup_rezult)
    logger.info('–ü–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω')


@bot.message_handler(func=lambda m: m.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
@logger.catch
def make_query(m):
    bot.send_message(m.chat.id, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å', reply_markup=types.ReplyKeyboardRemove())
    time.sleep(3)
    logger.info(f'–ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞')
    with bot.retrieve_data(m.chat.id) as data:
        records = data['middle_rez_5']
        counter = 1
        for i in list(records):
            if counter <= 3:
                # bot.send_message(m.chat.id, get_url_query(i[0])[0] + show_kvest_info(i[0])[0])
                bot.send_message(m.chat.id, *get_url_query(i[0])[0])
                bot.send_message(m.chat.id, show_kvest_info(*get_url_query(i[0])[0]))
                counter += 1
            else:
                break


@bot.message_handler(func=lambda m: m.text == "–ù–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ")
@logger.catch
def return_start(m):
    bot.send_message(m.chat.id, '–û—á–∏—â–∞–µ–º –∑–∞–ø—Ä–æ—Å ...')
    time.sleep(2)
    logger.info(f'–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö')
    bot_start()



if __name__ == '__main__':
    set_default_commands(bot)
    bot.infinity_polling()
